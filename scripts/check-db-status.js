require('dotenv').config();
const { PrismaClient } = require('@prisma/client');

async function checkDatabaseStatus() {
  console.log('üîç Verificando status do banco de dados...');
  
  let prisma;
  try {
    prisma = new PrismaClient({
      datasources: {
        db: {
          url: process.env.DATABASE_URL,
        },
      },
    });
    console.log('‚úÖ Prisma Client criado com sucesso');
    
    // Testar conex√£o
    await prisma.$connect();
    console.log('‚úÖ Conex√£o com banco de dados estabelecida');
    
    // Verificar configura√ß√µes de API
    console.log('\nüìã Verificando configura√ß√µes de API...');
    const configs = await prisma.apiConfiguration.findMany({
      select: {
        id: true,
        exchange: true,
        isActive: true,
        createdAt: true,
        updatedAt: true
      }
    });
    
    console.log(`üìä Total de configura√ß√µes encontradas: ${configs.length}`);
    
    if (configs.length > 0) {
      console.log('\nüîë Configura√ß√µes ativas:');
      configs.forEach(config => {
        console.log(`  - ${config.exchange.toUpperCase()}: ${config.isActive ? '‚úÖ Ativa' : '‚ùå Inativa'} (ID: ${config.id})`);
      });
    } else {
      console.log('‚ö†Ô∏è  Nenhuma configura√ß√£o encontrada no banco de dados');
    }
    
    // Verificar vari√°veis de ambiente
    console.log('\nüåç Verificando vari√°veis de ambiente...');
    console.log(`  - DATABASE_URL: ‚úÖ ${process.env.DATABASE_URL ? 'Definida' : '‚ùå N√£o definida'}`);
    console.log(`  - NODE_ENV: ${process.env.NODE_ENV || 'development'}`);
    
    console.log('\nüì° URLs de WebSocket (dados p√∫blicos):');
    console.log('  - Gate.io: wss://api.gateio.ws/ws/v4/');
    console.log('  - MEXC: wss://wbs.mexc.com/ws');
    
  } catch (error) {
    console.error('‚ùå Erro ao conectar com banco de dados:', error.message);
    
    // Verificar vari√°veis de ambiente como fallback
    console.log('\nüåç Verificando vari√°veis de ambiente (fallback)...');
    console.log(`  - DATABASE_URL: ${process.env.DATABASE_URL ? '‚úÖ Definida' : '‚ùå N√£o definida'}`);
    console.log(`  - NODE_ENV: ${process.env.NODE_ENV || 'development'}`);
    
    if (process.env.DATABASE_URL) {
      console.log('\n‚ö†Ô∏è  DATABASE_URL configurada, mas banco inacess√≠vel');
    } else {
      console.log('\n‚ùå DATABASE_URL n√£o configurada');
    }
  } finally {
    if (prisma) {
      await prisma.$disconnect();
      console.log('\nüîå Conex√£o com banco de dados fechada');
    }
  }
}

checkDatabaseStatus().catch(console.error); 