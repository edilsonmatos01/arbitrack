require('dotenv').config();

console.log('üîç Testando nova conex√£o direta...');
console.log('');

const dbConnection = require('../lib/db-connection').default;

async function testNewConnection() {
  console.log('=== TESTE: Nova Conex√£o Direta ===');
  
  try {
    console.log('üîå Testando conex√£o...');
    
    // Teste de conex√£o b√°sica
    const connectionTest = await dbConnection.testConnection();
    console.log('‚úÖ Conex√£o b√°sica OK!');
    console.log('üìä Resultado:', connectionTest[0]);
    
    // Teste de tabelas
    console.log('üìã Verificando tabelas...');
    
    const spreadCount = await dbConnection.getSpreadHistoryCount();
    console.log(`  - SpreadHistory: ${spreadCount} registros`);
    
    const operationCount = await dbConnection.getOperationHistoryCount();
    console.log(`  - OperationHistory: ${operationCount} registros`);
    
    const balanceCount = await dbConnection.getManualBalanceCount();
    console.log(`  - ManualBalance: ${balanceCount} registros`);
    
    const positionCount = await dbConnection.getPositionsCount();
    console.log(`  - Position: ${positionCount} registros`);
    
    // Teste de dados
    console.log('üìä Testando busca de dados...');
    
    const operations = await dbConnection.getOperationHistory(5);
    console.log(`  - √öltimas 5 opera√ß√µes: ${operations.length} encontradas`);
    
    const balances = await dbConnection.getManualBalances();
    console.log(`  - Balan√ßos manuais: ${balances.length} encontrados`);
    
    console.log('üéâ TODOS OS TESTES PASSARAM!');
    await dbConnection.close();
    return true;
  } catch (error) {
    console.error('‚ùå Erro:', error.message);
    console.error('üîç C√≥digo:', error.code);
    await dbConnection.close();
    return false;
  }
}

testNewConnection(); 