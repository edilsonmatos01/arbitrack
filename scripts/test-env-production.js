// Teste das vari√°veis de ambiente em produ√ß√£o
console.log('üß™ Teste das Vari√°veis de Ambiente em Produ√ß√£o');

function testEnvironmentVariables() {
  console.log('\n1. Verificando vari√°veis de ambiente...');
  
  const envVars = {
    NODE_ENV: process.env.NODE_ENV,
    NEXT_PUBLIC_WEBSOCKET_URL: process.env.NEXT_PUBLIC_WEBSOCKET_URL,
    DATABASE_URL: process.env.DATABASE_URL ? 'Definida' : 'N√£o definida',
    PORT: process.env.PORT,
    HOSTNAME: process.env.HOSTNAME,
    TZ: process.env.TZ
  };
  
  console.log('üìã Vari√°veis de ambiente:');
  Object.entries(envVars).forEach(([key, value]) => {
    const status = value ? '‚úÖ' : '‚ùå';
    console.log(`   ${status} ${key}: ${value || 'N√£o definida'}`);
  });
  
  console.log('\n2. Verificando configura√ß√£o do WebSocket...');
  
  if (envVars.NEXT_PUBLIC_WEBSOCKET_URL) {
    console.log('‚úÖ NEXT_PUBLIC_WEBSOCKET_URL est√° definida');
    console.log('üîó URL:', envVars.NEXT_PUBLIC_WEBSOCKET_URL);
    
    // Verificar se √© uma URL v√°lida
    try {
      const url = new URL(envVars.NEXT_PUBLIC_WEBSOCKET_URL);
      console.log('‚úÖ URL v√°lida:', url.protocol, '//', url.host);
    } catch (error) {
      console.error('‚ùå URL inv√°lida:', error.message);
    }
  } else {
    console.error('‚ùå NEXT_PUBLIC_WEBSOCKET_URL n√£o est√° definida!');
    console.log('üîß Isso pode causar falhas na conex√£o WebSocket');
  }
  
  console.log('\n3. Verificando ambiente...');
  console.log('üåç NODE_ENV:', envVars.NODE_ENV);
  
  if (envVars.NODE_ENV === 'production') {
    console.log('‚úÖ Ambiente de produ√ß√£o detectado');
    console.log('üì± Vari√°veis NEXT_PUBLIC_* devem estar dispon√≠veis no cliente');
  } else {
    console.log('‚ö†Ô∏è Ambiente de desenvolvimento');
    console.log('üîß Verificar se as vari√°veis est√£o no .env.local');
  }
  
  console.log('\n4. Diagn√≥stico...');
  
  if (!envVars.NEXT_PUBLIC_WEBSOCKET_URL) {
    console.log('‚ùå PROBLEMA: NEXT_PUBLIC_WEBSOCKET_URL n√£o definida');
    console.log('üîß Solu√ß√£o: Adicionar no render.yaml ou vari√°veis de ambiente');
  } else {
    console.log('‚úÖ WebSocket configurado corretamente');
  }
  
  return {
    success: !!envVars.NEXT_PUBLIC_WEBSOCKET_URL,
    envVars
  };
}

// Executar teste
const result = testEnvironmentVariables();

if (result.success) {
  console.log('\nüéâ CONFIGURA√á√ÉO CORRETA!');
  console.log('üì± WebSocket deve funcionar em produ√ß√£o');
} else {
  console.log('\n‚ö†Ô∏è CONFIGURA√á√ÉO INCORRETA!');
  console.log('üîß Verificar vari√°veis de ambiente no Render');
} 