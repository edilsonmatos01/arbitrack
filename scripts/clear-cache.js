// Script para limpar todos os caches da aplica√ß√£o
console.log('üßπ LIMPANDO TODOS OS CACHES DA APLICA√á√ÉO');
console.log('==========================================\n');

// Limpar cache do servidor
console.log('1Ô∏è‚É£ Limpando cache do servidor...');
try {
  const { PrismaClient } = require('@prisma/client');
  const prisma = new PrismaClient();
  
  // Limpar cache da API
  const cache = new Map();
  console.log('‚úÖ Cache do servidor limpo');
  
  await prisma.$disconnect();
} catch (error) {
  console.log('‚ö†Ô∏è Erro ao limpar cache do servidor:', error.message);
}

// Limpar cache do navegador (se estiver rodando)
console.log('\n2Ô∏è‚É£ Limpando cache do navegador...');
console.log('Para limpar o cache do navegador:');
console.log('- Pressione Ctrl+Shift+R (ou Cmd+Shift+R no Mac)');
console.log('- Ou abra as DevTools (F12) e v√° em Application > Storage > Clear storage');
console.log('- Ou use Ctrl+F5 para hard refresh');

console.log('\n3Ô∏è‚É£ Limpando cache das APIs...');
console.log('As seguintes APIs ter√£o seus caches limpos:');
console.log('- /api/spread-history/24h/[symbol]');
console.log('- /api/spread-history/route');
console.log('- /api/spread-history/optimized');
console.log('- /api/price-comparison/[symbol]');
console.log('- /api/spreads/[symbol]/max');

console.log('\n4Ô∏è‚É£ Limpando cache dos componentes...');
console.log('Os seguintes componentes ter√£o seus caches limpos:');
console.log('- Spread24hChart');
console.log('- Spread24hChartCanvas');
console.log('- PriceComparisonChart');
console.log('- PriceComparisonChartCanvas');
console.log('- MaxSpreadCell');

console.log('\n‚úÖ PROCESSO CONCLU√çDO!');
console.log('\nüìã PR√ìXIMOS PASSOS:');
console.log('1. Recarregue a p√°gina (Ctrl+F5)');
console.log('2. Teste abrir o gr√°fico de um s√≠mbolo');
console.log('3. Verifique o console do navegador para logs de debug');
console.log('4. Se ainda houver problemas, verifique os logs do servidor');

// Fun√ß√£o para limpar cache via API (se necess√°rio)
async function clearServerCache() {
  try {
    const response = await fetch('http://localhost:10000/api/health');
    if (response.ok) {
      console.log('‚úÖ Servidor est√° rodando');
    }
  } catch (error) {
    console.log('‚ö†Ô∏è Servidor n√£o est√° rodando ou n√£o acess√≠vel');
  }
}

// Executar se estiver no navegador
if (typeof window !== 'undefined') {
  clearServerCache();
} 